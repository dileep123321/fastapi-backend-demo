name: CI/CD - FastAPI Backend Deployment to GKE

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: modern-saga-472703-k3
  GKE_CLUSTER: test-demo-cluster
  GKE_ZONE: us-central1-a
  IMAGE: gcr.io/modern-saga-472703-k3/backend-app

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

  build:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install flake8 pytest

      - name: Run Lint
        run: flake8 app --ignore=E501

      - name: Build Docker Image
        run: docker build -t $IMAGE:${{ github.sha }} .

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker gcr.io --quiet

      - name: Push Image to GCR
        run: |
          docker push $IMAGE:${{ github.sha }}
          docker tag $IMAGE:${{ github.sha }} $IMAGE:latest
          docker push $IMAGE:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Install GKE auth plugin
        run: gcloud components install gke-gcloud-auth-plugin --quiet

      - name: Get GKE credentials
        run: gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID

      - name: Deploy to GKE
        run: |
          kubectl apply -f k8s/ --validate=false
          kubectl set image deployment/backend-deployment backend=$IMAGE:${{ github.sha }}
          kubectl rollout status deployment/backend-deployment
          kubectl get svc backend-service -o wide

